# This workflow will build a Java project with Gradle and deploy it on server
# deploy.sh will take the given parameters and perform the necessary operations, deploy.sh runs `docker-compose pull` and `docker-compose up -d` 



name: Java Cont Int with Gradle

on:
  push:
    branches: [ main ]
    tags: [ deployment ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew clean build
    - name: Get the version
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
    - name: Docker login
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        run : docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" docker.io
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{secrets.docker_username}}/${{secrets.repo_name}}:${{steps.vars.outputs.tag}}
    - name: Publish dockerimage to docker hub
      run: docker push ${{secrets.docker_username}}/${{secrets.repo_name}}:${{steps.vars.outputs.tag}}
    - name: Build Docker image with latest tag
      run: docker build . --file Dockerfile --tag ${{secrets.docker_username}}/${{secrets.repo_name}}:latest
    - name: Publish dockerimage to docker hub
      run: docker push ${{secrets.docker_username}}/${{secrets.repo_name}}:latest
